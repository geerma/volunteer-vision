import Head from "next/head";
import styles from "@/styles/Project.module.css";
import { withPageAuthRequired, getSession } from "@auth0/nextjs-auth0";
import { getSupabase } from "../../utils/supabase";
import { useRouter } from "next/router";
import { Navbar } from "../../components/Navbar";
import { useEffect, useState } from "react";
import { Box } from "@mui/system";
import Image from "next/image";
import { Button } from "@mui/material";
import Link from "next/link";

/*
Individual project page - page after clicking on a single project
Takes in userProfile, for Navbar and Supabase auth

Volunteers can Apply as Volunteer, Organizations do not have that option
*/
export default function Project_Id({ userProfile }) {
  const router = useRouter() 
  const { project_id } = router.query // variable project_id from url query

  const [project, setProject] = useState([])
  const supabase = getSupabase(userProfile.accessToken)

  /**
   * On page load, fetch data for one specific project matching project_id from url
   */
  useEffect(() => {
    const fetchProject = async () => {
      const { data } = await supabase.from('project').select('*').eq('project_id', project_id)
      setProject(data[0]) // Set project data
    }

    fetchProject()
  }, [])

  /**
   * Function called when clicking the button "Apply as Volunteer"
   * Adds volunteer applicant to list of project attendees
   */
  const handleClick = async () => {
    const response = await supabase.from('applicants').select('*').match({ user_id: userProfile.id, project_id: project_id });

    if (response.data.length < 1) {
      const { data } = await supabase.from('applicants').insert({ user_id: userProfile.id, project_id: project_id }).select();
    }

    router.push('/project/all');
  }

  return (
    <>
      <Head>
        <title>{project.name}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/icon.png" />
      </Head>
      <Navbar userProfile={userProfile} />
      <main className={styles.main}>
        {project != undefined ?
          <Box className={styles.project_id_box} my={4} px={10} py={2}>
            <h2>{project.name}</h2>
            <Image
              width={400}
              height={400}
              src={project.image_url}
              quality={75}
              alt="Image"
              priority
            />
            <h3>Project ID Number: {project_id}</h3>
            <h4>Location: {project.location} || Volunteers Required: {project.volunteers_needed}</h4>
            <p>Description: {project.description}</p>
            <Box className={styles.project_id_buttons}>
              <Link href="/project/all"><Button variant="outlined">Back</Button></Link>
              {userProfile.role !== 'org'
                ? <Button variant="contained" onClick={() => handleClick()}>Apply as a Volunteer</Button>
                : null
              }
            </Box>
          </Box>
          :
          null}
      </main>
    </>
  );
}

export const getServerSideProps = withPageAuthRequired({
  async getServerSideProps({ req, res }) {
    const {
      user: { accessToken, sub },
    } = await getSession(req, res)

    const supabase = getSupabase(accessToken)
    let userProfile = null;

    try {
      // if no user has user_id of sub, create new user
      const { data } = await supabase.from('user').upsert({ user_id: sub }, { onConflict: 'user_id' }).select()

      userProfile = data[0];
    }
    catch (e) {
      console.error(e.message)
    }

    return {
      props: { userProfile },
    }
  },
});